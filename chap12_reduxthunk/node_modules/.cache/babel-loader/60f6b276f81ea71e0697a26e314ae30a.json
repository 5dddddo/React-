{"ast":null,"code":"import { handleActions } from \"redux-actions\";\nimport axios from \"axios\";\nimport produce from 'immer';\nconst GET_CONTACTLIST = \"CONTACT/GET_CONTACTLIST\";\nconst GET_CONTACTLIST_SUCCESS = \"CONTACT/GET_CONTACTLIST_SUCCESS\";\nconst GET_CONTACTLIST_FAILURE = \"CONTACT/GET_CONTACTLIST_FAILURE\";\nconst GET_CONTACT = \"CONTACT/GET_CONTACT\";\nconst GET_CONTACT_SUCCESS = \"CONTACT/GET_CONTACT_SUCCESS\";\nconst GET_CONTACT_FAILURE = \"CONTACT/GET_CONTACT_FAILURE\";\nconst ADD_CONTACT = \"CONTACT/ADD_CONTACT\";\nconst ADD_CONTACT_SUCCESS = \"CONTACT/ADD_CONTACT_SUCCESS\";\nconst ADD_CONTACT_FAILURE = \"CONTACT/ADD_CONTACT_FAILURE\";\nconst baseURL = \"http://localhost:8000/contacts/\";\nconst baseLONG = \"http://localhost:8000/contacts_long/\"; // Action\n\nconst getContactListAction = function () {\n  let no = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  let size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  return async dispatch => {\n    try {\n      await dispatch({\n        type: GET_CONTACTLIST\n      });\n      const resp = await axios.get(baseLONG, {\n        params: {\n          pageno: no,\n          pagesize: size\n        }\n      });\n      await dispatch({\n        type: GET_CONTACTLIST_SUCCESS,\n        payload: resp.data\n      });\n    } catch (error) {\n      await dispatch({\n        type: GET_CONTACTLIST_FAILURE,\n        payload: err\n      });\n    }\n  };\n};\n\nconst init = {\n  loading: false,\n  contactList: null,\n  contact: null,\n  error: null\n};\nconst contactR = handleActions({\n  // Get List\n  [GET_CONTACTLIST]: (state, action) => {\n    return { ...state,\n      loading: true,\n      contactList: null,\n      error: null\n    };\n  },\n  [GET_CONTACTLIST_SUCCESS]: (state, action) => {\n    return produce(state, draft => {\n      draft.loading = false;\n      draft.contactList = action.payload;\n      draft.error = null;\n    });\n  },\n  [GET_CONTACTLIST_FAILURE]: (state, action) => {\n    return;\n  },\n  // Get\n  [GET_CONTACT]: (state, action) => {\n    return;\n  },\n  [GET_CONTACT_SUCCESS]: (state, action) => {\n    return;\n  },\n  [GET_CONTACT_FAILURE]: (state, action) => {\n    return;\n  },\n  // Add\n  [ADD_CONTACT]: (state, action) => {\n    return;\n  },\n  [ADD_CONTACT_SUCCESS]: (state, action) => {\n    return;\n  },\n  [ADD_CONTACT_FAILURE]: (state, action) => {\n    return;\n  }\n}, init);\nexport default contactR;","map":{"version":3,"names":["handleActions","axios","produce","GET_CONTACTLIST","GET_CONTACTLIST_SUCCESS","GET_CONTACTLIST_FAILURE","GET_CONTACT","GET_CONTACT_SUCCESS","GET_CONTACT_FAILURE","ADD_CONTACT","ADD_CONTACT_SUCCESS","ADD_CONTACT_FAILURE","baseURL","baseLONG","getContactListAction","no","size","dispatch","type","resp","get","params","pageno","pagesize","payload","data","error","err","init","loading","contactList","contact","contactR","state","action","draft"],"sources":["C:/Users/OOO/Downloads/20220725_React-main/chap12_reduxthunk/src/modules/contactR.js"],"sourcesContent":["import { handleActions } from \"redux-actions\";\nimport axios from \"axios\";\nimport produce from 'immer';\n\nconst GET_CONTACTLIST = \"CONTACT/GET_CONTACTLIST\";\nconst GET_CONTACTLIST_SUCCESS = \"CONTACT/GET_CONTACTLIST_SUCCESS\";\nconst GET_CONTACTLIST_FAILURE = \"CONTACT/GET_CONTACTLIST_FAILURE\";\n\nconst GET_CONTACT = \"CONTACT/GET_CONTACT\";\nconst GET_CONTACT_SUCCESS = \"CONTACT/GET_CONTACT_SUCCESS\";\nconst GET_CONTACT_FAILURE = \"CONTACT/GET_CONTACT_FAILURE\";\n\nconst ADD_CONTACT = \"CONTACT/ADD_CONTACT\";\nconst ADD_CONTACT_SUCCESS = \"CONTACT/ADD_CONTACT_SUCCESS\";\nconst ADD_CONTACT_FAILURE = \"CONTACT/ADD_CONTACT_FAILURE\";\n\nconst baseURL = \"http://localhost:8000/contacts/\";\nconst baseLONG = \"http://localhost:8000/contacts_long/\";\n\n// Action\nconst getContactListAction = (no=1, size=10)=> async dispatch =>{\n  try { \n    await dispatch({type:GET_CONTACTLIST})\n    const resp = await axios.get(baseLONG, {params: {pageno : no, pagesize:size}})\n    await dispatch({type:GET_CONTACTLIST_SUCCESS, payload : resp.data})\n  } catch (error) {\n    await dispatch({type:GET_CONTACTLIST_FAILURE, payload: err})\n  }\n}\n\nconst init = {\n  loading: false,\n  contactList: null,\n  contact: null,\n  error: null,\n};\nconst contactR = handleActions(\n  {\n    // Get List\n    [GET_CONTACTLIST]: (state, action) => {\n      return {...state, \n        loading : true,\n        contactList : null,\n        error : null\n      };\n    },\n    [GET_CONTACTLIST_SUCCESS]: (state, action) => {\n      return produce(state, draft=>{\n        draft.loading = false;\n        draft.contactList = action.payload;\n        draft.error = null;\n      });\n    },\n    [GET_CONTACTLIST_FAILURE]: (state, action) => {\n      return;\n    },\n    // Get\n    [GET_CONTACT]: (state, action) => {\n      return;\n    },\n    [GET_CONTACT_SUCCESS]: (state, action) => {\n      return;\n    },\n    [GET_CONTACT_FAILURE]: (state, action) => {\n      return;\n    },\n    // Add\n    [ADD_CONTACT]: (state, action) => {\n      return;\n    },\n    [ADD_CONTACT_SUCCESS]: (state, action) => {\n      return;\n    },\n    [ADD_CONTACT_FAILURE]: (state, action) => {\n      return;\n    },\n  },\n  init\n);\nexport default contactR;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}