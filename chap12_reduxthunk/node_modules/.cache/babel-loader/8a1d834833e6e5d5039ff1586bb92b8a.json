{"ast":null,"code":"import { handleActions } from \"redux-actions\";\nimport axios from \"axios\";\nconst GET_CONTACTLIST = \"CONTACT/GET_CONTACTLIST\";\nconst GET_CONTACTLIST_SUCCESS = \"CONTACT/GET_CONTACTLIST_SUCCESS\";\nconst GET_CONTACTLIST_FAILURE = \"CONTACT/GET_CONTACTLIST_FAILURE\";\nconst GET_CONTACT = \"CONTACT/GET_CONTACT\";\nconst GET_CONTACT_SUCCESS = \"CONTACT/GET_CONTACT_SUCCESS\";\nconst GET_CONTACT_FAILURE = \"CONTACT/GET_CONTACT_FAILURE\";\nconst ADD_CONTACT = \"CONTACT/ADD_CONTACT\";\nconst ADD_CONTACT_SUCCESS = \"CONTACT/ADD_CONTACT_SUCCESS\";\nconst ADD_CONTACT_FAILURE = \"CONTACT/ADD_CONTACT_FAILURE\";\nconst baseURL = \"http://localhost:8000/contacts/\";\nconst baseLONG = \"http://localhost:8000/contacts_long/\"; // Action\n\nconst getContactListAction = function () {\n  let no = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  let size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  return async dispatch => {\n    try {\n      await dispatch({\n        type: GET_CONTACTLIST\n      });\n    } catch (error) {}\n  };\n};\n\nconst init = {\n  loading: false,\n  contactList: null,\n  contact: null,\n  error: null\n};\nconst contactR = handleActions({\n  // Get List\n  [GET_CONTACTLIST]: (state, action) => {\n    return;\n  },\n  [GET_CONTACTLIST_SUCCESS]: (state, action) => {\n    return;\n  },\n  [GET_CONTACTLIST_FAILURE]: (state, action) => {\n    return;\n  },\n  // Get\n  [GET_CONTACT]: (state, action) => {\n    return;\n  },\n  [GET_CONTACT_SUCCESS]: (state, action) => {\n    return;\n  },\n  [GET_CONTACT_FAILURE]: (state, action) => {\n    return;\n  },\n  // Add\n  [ADD_CONTACT]: (state, action) => {\n    return;\n  },\n  [ADD_CONTACT_SUCCESS]: (state, action) => {\n    return;\n  },\n  [ADD_CONTACT_FAILURE]: (state, action) => {\n    return;\n  }\n}, init);\nexport default contactR;","map":{"version":3,"names":["handleActions","axios","GET_CONTACTLIST","GET_CONTACTLIST_SUCCESS","GET_CONTACTLIST_FAILURE","GET_CONTACT","GET_CONTACT_SUCCESS","GET_CONTACT_FAILURE","ADD_CONTACT","ADD_CONTACT_SUCCESS","ADD_CONTACT_FAILURE","baseURL","baseLONG","getContactListAction","no","size","dispatch","type","error","init","loading","contactList","contact","contactR","state","action"],"sources":["C:/Users/OOO/Downloads/20220725_React-main/chap12_reduxthunk/src/modules/contactR.js"],"sourcesContent":["import { handleActions } from \"redux-actions\";\nimport axios from \"axios\";\n\nconst GET_CONTACTLIST = \"CONTACT/GET_CONTACTLIST\";\nconst GET_CONTACTLIST_SUCCESS = \"CONTACT/GET_CONTACTLIST_SUCCESS\";\nconst GET_CONTACTLIST_FAILURE = \"CONTACT/GET_CONTACTLIST_FAILURE\";\n\nconst GET_CONTACT = \"CONTACT/GET_CONTACT\";\nconst GET_CONTACT_SUCCESS = \"CONTACT/GET_CONTACT_SUCCESS\";\nconst GET_CONTACT_FAILURE = \"CONTACT/GET_CONTACT_FAILURE\";\n\nconst ADD_CONTACT = \"CONTACT/ADD_CONTACT\";\nconst ADD_CONTACT_SUCCESS = \"CONTACT/ADD_CONTACT_SUCCESS\";\nconst ADD_CONTACT_FAILURE = \"CONTACT/ADD_CONTACT_FAILURE\";\n\nconst baseURL = \"http://localhost:8000/contacts/\";\nconst baseLONG = \"http://localhost:8000/contacts_long/\";\n\n// Action\nconst getContactListAction = (no=1, size=10)=> async dispatch =>{\n  try { \n    await dispatch({type:GET_CONTACTLIST})\n    \n  } catch (error) {\n    \n  }\n}\n\nconst init = {\n  loading: false,\n  contactList: null,\n  contact: null,\n  error: null,\n};\nconst contactR = handleActions(\n  {\n    // Get List\n    [GET_CONTACTLIST]: (state, action) => {\n      return;\n    },\n    [GET_CONTACTLIST_SUCCESS]: (state, action) => {\n      return;\n    },\n    [GET_CONTACTLIST_FAILURE]: (state, action) => {\n      return;\n    },\n    // Get\n    [GET_CONTACT]: (state, action) => {\n      return;\n    },\n    [GET_CONTACT_SUCCESS]: (state, action) => {\n      return;\n    },\n    [GET_CONTACT_FAILURE]: (state, action) => {\n      return;\n    },\n    // Add\n    [ADD_CONTACT]: (state, action) => {\n      return;\n    },\n    [ADD_CONTACT_SUCCESS]: (state, action) => {\n      return;\n    },\n    [ADD_CONTACT_FAILURE]: (state, action) => {\n      return;\n    },\n  },\n  init\n);\nexport default contactR;\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,eAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,eAAe,GAAG,yBAAxB;AACA,MAAMC,uBAAuB,GAAG,iCAAhC;AACA,MAAMC,uBAAuB,GAAG,iCAAhC;AAEA,MAAMC,WAAW,GAAG,qBAApB;AACA,MAAMC,mBAAmB,GAAG,6BAA5B;AACA,MAAMC,mBAAmB,GAAG,6BAA5B;AAEA,MAAMC,WAAW,GAAG,qBAApB;AACA,MAAMC,mBAAmB,GAAG,6BAA5B;AACA,MAAMC,mBAAmB,GAAG,6BAA5B;AAEA,MAAMC,OAAO,GAAG,iCAAhB;AACA,MAAMC,QAAQ,GAAG,sCAAjB,C,CAEA;;AACA,MAAMC,oBAAoB,GAAG;EAAA,IAACC,EAAD,uEAAI,CAAJ;EAAA,IAAOC,IAAP,uEAAY,EAAZ;EAAA,OAAkB,MAAMC,QAAN,IAAiB;IAC9D,IAAI;MACF,MAAMA,QAAQ,CAAC;QAACC,IAAI,EAACf;MAAN,CAAD,CAAd;IAED,CAHD,CAGE,OAAOgB,KAAP,EAAc,CAEf;EACF,CAP4B;AAAA,CAA7B;;AASA,MAAMC,IAAI,GAAG;EACXC,OAAO,EAAE,KADE;EAEXC,WAAW,EAAE,IAFF;EAGXC,OAAO,EAAE,IAHE;EAIXJ,KAAK,EAAE;AAJI,CAAb;AAMA,MAAMK,QAAQ,GAAGvB,aAAa,CAC5B;EACE;EACA,CAACE,eAAD,GAAmB,CAACsB,KAAD,EAAQC,MAAR,KAAmB;IACpC;EACD,CAJH;EAKE,CAACtB,uBAAD,GAA2B,CAACqB,KAAD,EAAQC,MAAR,KAAmB;IAC5C;EACD,CAPH;EAQE,CAACrB,uBAAD,GAA2B,CAACoB,KAAD,EAAQC,MAAR,KAAmB;IAC5C;EACD,CAVH;EAWE;EACA,CAACpB,WAAD,GAAe,CAACmB,KAAD,EAAQC,MAAR,KAAmB;IAChC;EACD,CAdH;EAeE,CAACnB,mBAAD,GAAuB,CAACkB,KAAD,EAAQC,MAAR,KAAmB;IACxC;EACD,CAjBH;EAkBE,CAAClB,mBAAD,GAAuB,CAACiB,KAAD,EAAQC,MAAR,KAAmB;IACxC;EACD,CApBH;EAqBE;EACA,CAACjB,WAAD,GAAe,CAACgB,KAAD,EAAQC,MAAR,KAAmB;IAChC;EACD,CAxBH;EAyBE,CAAChB,mBAAD,GAAuB,CAACe,KAAD,EAAQC,MAAR,KAAmB;IACxC;EACD,CA3BH;EA4BE,CAACf,mBAAD,GAAuB,CAACc,KAAD,EAAQC,MAAR,KAAmB;IACxC;EACD;AA9BH,CAD4B,EAiC5BN,IAjC4B,CAA9B;AAmCA,eAAeI,QAAf"},"metadata":{},"sourceType":"module"}